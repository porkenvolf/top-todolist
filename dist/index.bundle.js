(()=>{"use strict";var n={797:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap);"]),o.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/css/equalize.css"],names:[],mappings:"AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,iCAAiC;AACrC;AACA;;;;IAII,oBAAoB;IACpB,eAAe;AACnB;AACA;;;;IAII,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:["@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\");\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n"],sourceRoot:""}]);const s=o},195:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([n.id,":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n","",{version:3,sources:["webpack://./src/css/scrollbar.css"],names:[],mappings:"AAAA;IACI,oCAAoC;AACxC;AACA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,0BAA0B;IAC1B,mDAAmD;AACvD;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n"],sourceRoot:""}]);const s=o},402:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),a=t.n(r),i=t(645),o=t.n(i),s=t(797),d=t(195),c=t(728),A=o()(a());A.i(s.Z),A.i(d.Z),A.i(c.Z),A.push([n.id,'body {\n    min-height: 100vh;\n    background: red;\n    display: grid;\n    grid-template-columns: 20vw 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n    display: flex;\n    align-items: center;\n    border: 2px solid transparent;\n    transition: 200ms;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 30rem;\n}\n#mainContent .card #title {\n    display: flex;\n}\n#mainContent .card #title .parentHoverRemoveList {\n    padding: 5px;\n    flex: 0;\n    height: 3rem;\n    transition: background-color 200ms;\n    filter: opacity(0);\n    border-radius: 50px;\n    margin-left: 10px;\n}\n#mainContent .card:hover .parentHoverRemoveList {\n    filter: opacity(1) invert(1) brightness(80%) !important;\n}\n#mainContent .card .parentHoverRemoveList:hover {\n    background: rgb(153, 120, 93);\n}\n#mainContent .card .name {\n    flex: 1;\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--text);\n}\n\n#mainContent ul {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: auto;\n    margin: 0 10px;\n}\n#mainContent .card input[type="text"] {\n    background: transparent;\n    border: none;\n    flex: 1;\n    color: var(--text);\n    padding: 5px;\n}\n#mainContent .card .parentHoverRemoveTask {\n    padding: 5px;\n    margin: 0px;\n    background-color: transparent;\n    height: 2rem;\n    filter: opacity(0);\n    transition: 200ms;\n    margin-left: 10px;\n}\n#mainContent .card li:hover .parentHoverRemoveTask {\n    filter: opacity(1) invert(1) brightness(80%);\n}\n#mainContent .card li:hover {\n    border-top: 2px solid var(--border);\n    border-bottom: 2px solid var(--border);\n}\n#mainContent .card .parentHoverRemoveTask:hover {\n    background: rgb(153, 120, 93);\n    border-radius: 50px;\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAIA;IACI,iBAAiB;IACjB,eAAe;IACf,aAAa;IACb,+BAA+B;IAC/B,iCAAiC;IACjC,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,eAAe;AACnB;AACA;IACI,qBAAqB;IACrB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,0BAA0B;IAC1B,sCAAsC;IACtC,iBAAiB;IACjB,WAAW;IACX,aAAa;AACjB;AACA;IACI,cAAc;IACd,cAAc;IACd,yBAAyB;IACzB,qCAAqC;IACrC,aAAa;AACjB;AACA;IACI,cAAc;;IAEd,OAAO;IACP,aAAa;IACb,yBAAyB;IACzB,aAAa;IACb,2DAA2D;IAC3D,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,+BAA+B;IAC/B,mBAAmB;IACnB,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,gBAAgB;AACpB;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,OAAO;IACP,YAAY;IACZ,kCAAkC;IAClC,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,uDAAuD;AAC3D;AACA;IACI,6BAA6B;AACjC;AACA;IACI,OAAO;IACP,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,cAAc;AAClB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,cAAc;AAClB;AACA;IACI,uBAAuB;IACvB,YAAY;IACZ,OAAO;IACP,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,4CAA4C;AAChD;AACA;IACI,mCAAmC;IACnC,sCAAsC;AAC1C;AACA;IACI,6BAA6B;IAC7B,mBAAmB;AACvB",sourcesContent:['@import url(./equalize.css);\n@import url(./scrollbar.css);\n@import url(./variables.css);\n\nbody {\n    min-height: 100vh;\n    background: red;\n    display: grid;\n    grid-template-columns: 20vw 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n    display: flex;\n    align-items: center;\n    border: 2px solid transparent;\n    transition: 200ms;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 30rem;\n}\n#mainContent .card #title {\n    display: flex;\n}\n#mainContent .card #title .parentHoverRemoveList {\n    padding: 5px;\n    flex: 0;\n    height: 3rem;\n    transition: background-color 200ms;\n    filter: opacity(0);\n    border-radius: 50px;\n    margin-left: 10px;\n}\n#mainContent .card:hover .parentHoverRemoveList {\n    filter: opacity(1) invert(1) brightness(80%) !important;\n}\n#mainContent .card .parentHoverRemoveList:hover {\n    background: rgb(153, 120, 93);\n}\n#mainContent .card .name {\n    flex: 1;\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--text);\n}\n\n#mainContent ul {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: auto;\n    margin: 0 10px;\n}\n#mainContent .card input[type="text"] {\n    background: transparent;\n    border: none;\n    flex: 1;\n    color: var(--text);\n    padding: 5px;\n}\n#mainContent .card .parentHoverRemoveTask {\n    padding: 5px;\n    margin: 0px;\n    background-color: transparent;\n    height: 2rem;\n    filter: opacity(0);\n    transition: 200ms;\n    margin-left: 10px;\n}\n#mainContent .card li:hover .parentHoverRemoveTask {\n    filter: opacity(1) invert(1) brightness(80%);\n}\n#mainContent .card li:hover {\n    border-top: 2px solid var(--border);\n    border-bottom: 2px solid var(--border);\n}\n#mainContent .card .parentHoverRemoveTask:hover {\n    background: rgb(153, 120, 93);\n    border-radius: 50px;\n}\n'],sourceRoot:""}]);const l=A},728:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([n.id,":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n","",{version:3,sources:["webpack://./src/css/variables.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);r&&o[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],s=0;s<n.length;s++){var d=n[s],c=r.base?d[0]+r.base:d[0],A=i[c]||0,l="".concat(c," ").concat(A);i[c]=A+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var d=r(n,a),c=0;c<i.length;c++){var A=t(i[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!n;)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n={Pubsub:{},on:function(n,e){this.Pubsub[n]=this.Pubsub[n]||[],this.Pubsub[n].push(e)},off:function(n,e){if(this.Pubsub[n])for(var t=0;t<this.Pubsub[n].length;t++)if(this.Pubsub[n][t]===e){this.Pubsub[n].splice(t,1);break}},emit:function(n,e){this.Pubsub[n]&&this.Pubsub[n].forEach((function(n){n(e)}))}};class e{#n;#e;#t;constructor(n,e){this.#n=n,this.#e=e,this.#t=void 0}get name(){return this.#n}set name(n){this.#n=n}get isDone(){return this.#e}set isDone(n){this.#e=n}get dueDate(){return this.#t}set dueDate(n){this.#t=n}get parse(){return{name:this.#n,isDone:this.#e,dueDate:this.#t}}}class r{#r;#n;#a={};constructor(n,t,r){if(this.#r=n,this.#n=t,r)for(const n in r)this.#a[n]=new e(r[n].name,r[n].isDone)}get tasks(){return this.#a}set tasks(n){}get name(){return this.#n}set name(n){this.#n=n}get id(){return this.#r}get parse(){let n={};for(const e in this.#a)n[e]=this.#a[e].parse;return{id:this.#r,name:this.#n,tasks:n}}}class a{static#i={};static#o=[];static newList(){const n=Math.random(),e=new r(n,"New List",{});console.log(e),this.#i[n]=e}static clear(){localStorage.clear()}static save(){localStorage.clear();for(const n in this.#i){localStorage.setItem(n,JSON.stringify(this.#i[n].parse));const e=localStorage;console.log(e)}}static load(){console.log(localStorage),this.#i={};for(const n in localStorage)if(Object.hasOwnProperty.call(localStorage,n)){const e=JSON.parse(localStorage[n]);this.#i[e.id]=new r(n,e.name,e.tasks)}}static get listsStorage(){return this.#i}}var i=t(379),o=t.n(i),s=t(795),d=t.n(s),c=t(569),A=t.n(c),l=t(565),p=t.n(l),u=t(216),m=t.n(u),C=t(589),g=t.n(C),b=t(402),h={};h.styleTagTransform=g(),h.setAttributes=p(),h.insert=A().bind(null,"head"),h.domAPI=d(),h.insertStyleElement=m(),o()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals;const v=t.p+"97d4c0a10ac97607dc65.svg";class f{#s;#d;constructor(n){return this.#d=n,this.#c(),this.#A(),this.#s}#c(){const n=document.createElement("div");n.classList.add("card"),n.innerHTML="\n            <div id='title'></div>\n            <ul>\n            </ul>\n            <progress></progress>\n        ";const e=document.createElement("input");e.type="text",e.classList.add("name"),e.value=this.#d.id,n.querySelector("#title").appendChild(e);const t=document.createElement("img");t.src=v,t.classList="parentHoverRemoveList",n.querySelector("#title").appendChild(t);const r=this.#d.tasks;let a=0;const i=n.querySelector("ul");for(const n in r){const e=document.createElement("li"),t=document.createElement("input");t.type="checkbox",t.checked=r[n].isDone,t.checked&&(a+=1),t.setAttribute("data-taskid",n),e.appendChild(t);const o=document.createElement("input");o.classList.add("task"),o.type="text",o.setAttribute("data-taskid",n),o.value=r[n].name,e.appendChild(o);const s=document.createElement("img");s.src=v,s.classList="parentHoverRemoveTask",s.setAttribute("data-taskid",n),e.appendChild(s),i.appendChild(e)}const o=document.createElement("li"),s=document.createElement("input");s.type="text",s.classList.add("newTask"),s.placeholder="Add new task",s.innerText="";const d=document.createElement("input");d.type="checkbox",d.disabled=!0,o.appendChild(d),o.appendChild(s),i.appendChild(o);const c=n.querySelector("progress");c.max=Object.keys(r).length,c.value=a,this.#s=n}#A(){this.#s.querySelector(".name").addEventListener("change",(e=>{e.preventDefault(),this.#d.name=e.target.value,n.emit("reloadPage")})),this.#s.querySelector(".parentHoverRemoveList").addEventListener("click",(e=>{n.emit("removeList",this.#d)})),this.#s.querySelectorAll('input[type="checkbox"]').forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-taskid");this.#d.tasks[t].isDone=e.target.checked,n.emit("reloadPage")}))})),this.#s.querySelectorAll(".task").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.getAttribute("data-taskid");this.#d.tasks[t].name=e.target.value,n.emit("reloadPage")}))})),this.#s.querySelector(".newTask").addEventListener("change",(t=>{const r=Math.random();this.#d.tasks[r]=new e(t.target.value,!1),n.emit("reloadPage")})),this.#s.querySelectorAll(".parentHoverRemoveTask").forEach((e=>{e.addEventListener("click",(e=>{delete this.#d.tasks[e.target.getAttribute("data-taskid")],n.emit("reloadPage")}))}))}}class B{static loadPage(){this.body=document.querySelector("body"),this.body.innerHTML="",this.#l(),this.#p(),this.renderLists()}static#p(){const n=document.createElement("div");n.innerHTML="\n            <h2>Dashboard</h2>\n        ",n.id="leftPanel",this.body.appendChild(n)}static#l(){const n=document.createElement("div");n.innerHTML="DewDew.it",n.id="nav",this.body.appendChild(n)}static renderLists(){const e=document.createElement("div");e.id="mainButtons",this.body.appendChild(e);const t=document.createElement("button");t.innerText="New List",e.appendChild(t),t.addEventListener("click",(e=>{n.emit("newList")}));const r=document.createElement("div");r.id="mainContent",this.body.appendChild(r);const i=a.listsStorage;for(const n in i)r.appendChild(new f(i[n]))}static#u(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{}));const t=document.createElement("div");t.id="mainContent",this.body.appendChild(t),t.innerHTML='\n                    <div class="content">\n                        <div class="card">\n                            <div class="name">Project 1</div>\n                            <div class="description">\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                Suscipit, dolorem autem rem maiores sunt fugit! Magni\n                                consectetur tenetur placeat ipsam nesciunt beatae\n                                deserunt nisi aut.\n                            </div>\n\n                            <h2>Active Lists</h2>\n                            <ul>\n                                <li>List 1</li>\n                                <li>List 2</li>\n                                <li>List 3</li>\n                                <li>List 4</li>\n                            </ul>\n                            <div class="pending">3 pending tasks in 2 lists.</div>\n                            <progress max="100" value="70"></progress>\n                            <button>Go to project</button>\n                        </div>\n                    </div>'}static#m(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{}))}}(class{static bindEvents(){n.on("save",(()=>{a.save()})),n.on("load",(()=>{a.load()})),n.on("reloadPage",(()=>{n.emit("save"),B.loadPage()})),n.on("newList",(()=>{a.newList(),n.emit("reloadPage")})),n.on("removeList",(e=>{console.log(e.id),delete a.listsStorage[e.id],n.emit("reloadPage")}))}}).bindEvents(),n.emit("load"),B.loadPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,