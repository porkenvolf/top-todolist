(()=>{"use strict";var n={797:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap);"]),i.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/css/equalize.css"],names:[],mappings:"AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,iCAAiC;AACrC;AACA;;;;IAII,oBAAoB;IACpB,eAAe;AACnB;AACA;;;;IAII,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:["@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\");\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n"],sourceRoot:""}]);const s=i},399:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".modal {\n    background-color: rgba(0, 0, 0, 0.7);\n    position: fixed;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 25px;\n}\n.modal-body {\n    background-color: var(--mid-bg);\n    border-radius: 10px;\n    padding: 25px;\n    width: min(100%, 600px);\n}\n.modal .top-bar {\n    display: flex;\n    justify-content: space-between;\n}\n.modal li {\n    display: flex;\n    margin-bottom: 1rem;\n}\n.modal input,\nselect {\n    flex: 1;\n    background-color: var(--dark-bg);\n    border: 1px solid var(--border);\n    padding: 15px;\n    color: var(--text);\n}\n.modal option {\n    color: var(--text);\n}\n.modal #btnModalClose {\n    position: relative;\n    background-color: transparent;\n    border: none;\n    width: 2rem;\n    margin-bottom: 1.5rem;\n}\n.modal #addBookSubmit {\n    background-color: var(--primary);\n    border: none;\n    border-radius: 10px;\n    padding: 15px;\n    flex: 1;\n    color: var(--text);\n    font-weight: bold;\n    font-size: 1.5rem;\n}\n.modal button:hover {\n    filter: brightness(150%);\n}\n","",{version:3,sources:["webpack://./src/css/modal.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,eAAe;IACf,OAAO;IACP,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;IACnB,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;;IAEI,OAAO;IACP,gCAAgC;IAChC,+BAA+B;IAC/B,aAAa;IACb,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,6BAA6B;IAC7B,YAAY;IACZ,WAAW;IACX,qBAAqB;AACzB;AACA;IACI,gCAAgC;IAChC,YAAY;IACZ,mBAAmB;IACnB,aAAa;IACb,OAAO;IACP,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,wBAAwB;AAC5B",sourcesContent:[".modal {\n    background-color: rgba(0, 0, 0, 0.7);\n    position: fixed;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 25px;\n}\n.modal-body {\n    background-color: var(--mid-bg);\n    border-radius: 10px;\n    padding: 25px;\n    width: min(100%, 600px);\n}\n.modal .top-bar {\n    display: flex;\n    justify-content: space-between;\n}\n.modal li {\n    display: flex;\n    margin-bottom: 1rem;\n}\n.modal input,\nselect {\n    flex: 1;\n    background-color: var(--dark-bg);\n    border: 1px solid var(--border);\n    padding: 15px;\n    color: var(--text);\n}\n.modal option {\n    color: var(--text);\n}\n.modal #btnModalClose {\n    position: relative;\n    background-color: transparent;\n    border: none;\n    width: 2rem;\n    margin-bottom: 1.5rem;\n}\n.modal #addBookSubmit {\n    background-color: var(--primary);\n    border: none;\n    border-radius: 10px;\n    padding: 15px;\n    flex: 1;\n    color: var(--text);\n    font-weight: bold;\n    font-size: 1.5rem;\n}\n.modal button:hover {\n    filter: brightness(150%);\n}\n"],sourceRoot:""}]);const s=i},195:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n","",{version:3,sources:["webpack://./src/css/scrollbar.css"],names:[],mappings:"AAAA;IACI,oCAAoC;AACxC;AACA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,0BAA0B;IAC1B,mDAAmD;AACvD;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n"],sourceRoot:""}]);const s=i},402:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(797),A=t(195),d=t(728),c=t(399),l=i()(o());l.i(s.Z),l.i(A.Z),l.i(d.Z),l.i(c.Z),l.push([n.id,'body {\n    min-height: 100vh;\n    background: red;\n    display: grid;\n    grid-template-columns: 20vw 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 30rem;\n}\n#mainContent .card .name {\n    font-size: 2rem;\n    font-weight: bold;\n}\n#mainContent .card .description {\n}\n#mainContent ul {\n    flex: 1;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: auto;\n    margin: 0 10px;\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAKA;IACI,iBAAiB;IACjB,eAAe;IACf,aAAa;IACb,+BAA+B;IAC/B,iCAAiC;IACjC,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,eAAe;AACnB;AACA;IACI,qBAAqB;AACzB;AACA;IACI,0BAA0B;IAC1B,sCAAsC;IACtC,iBAAiB;IACjB,WAAW;IACX,aAAa;AACjB;AACA;IACI,cAAc;IACd,cAAc;IACd,yBAAyB;IACzB,qCAAqC;IACrC,aAAa;AACjB;AACA;IACI,cAAc;;IAEd,OAAO;IACP,aAAa;IACb,yBAAyB;IACzB,aAAa;IACb,2DAA2D;IAC3D,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,+BAA+B;IAC/B,mBAAmB;IACnB,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;AACA;AACA;AACA;IACI,OAAO;AACX;AACA;IACI,WAAW;IACX,cAAc;AAClB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,cAAc;AAClB",sourcesContent:['@import url(./equalize.css);\n@import url(./scrollbar.css);\n@import url(./variables.css);\n@import url(./modal.css);\n\nbody {\n    min-height: 100vh;\n    background: red;\n    display: grid;\n    grid-template-columns: 20vw 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 30rem;\n}\n#mainContent .card .name {\n    font-size: 2rem;\n    font-weight: bold;\n}\n#mainContent .card .description {\n}\n#mainContent ul {\n    flex: 1;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: auto;\n    margin: 0 10px;\n}\n'],sourceRoot:""}]);const p=l},728:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n","",{version:3,sources:["webpack://./src/css/variables.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],d=r.base?A[0]+r.base:A[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n={events:{},on:function(n,e){this.events[n]=this.events[n]||[],this.events[n].push(e)},off:function(n,e){if(this.events[n])for(var t=0;t<this.events[n].length;t++)if(this.events[n][t]===e){this.events[n].splice(t,1);break}},emit:function(n,e){this.events[n]&&this.events[n].forEach((function(n){n(e)}))}};class e{#n;#e={};constructor(n,e){this.#n=n,e&&(this.#e=e)}get tasks(){return this.#e}get name(){return this.#n}set name(n){this.#n=n}get parse(){return{name:this.#n,tasks:this.#e}}}class r{static#t=[];static#r=[];static populate(){this.#t.push(new e("Default List",{0:{name:"dsa",isDone:!0},1:{name:"test",isDone:!1}})),this.save()}static save(){localStorage.clear(),this.#t.forEach(((n,e)=>{localStorage.setItem(e,JSON.stringify(n.parse))})),this.load()}static load(){for(let n=0;n<localStorage.length;n++){const t=JSON.parse(localStorage[n]);this.#r.push(new e(t.name,t.tasks))}}static get listsStorage(){return this.#t}}var o=t(379),a=t.n(o),i=t(795),s=t.n(i),A=t(569),d=t.n(A),c=t(565),l=t.n(c),p=t(216),u=t.n(p),m=t(589),C=t.n(m),b=t(402),g={};g.styleTagTransform=C(),g.setAttributes=l(),g.insert=d().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=u(),a()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals;class h{#o;#a;constructor(n){return this.#a=n,this.#i(),this.#s(),this.#o}#i(){const n=document.createElement("div");n.classList.add("card"),n.innerHTML=`\n            <div class="name">${this.#a.name}</div>\n            <ul>\n            </ul>\n            <progress></progress>\n        `;const e=this.#a.tasks;let t=0;const r=n.querySelector("ul");for(const n in e){const o=document.createElement("li"),a=document.createElement("input");a.type="checkbox",a.checked=e[n].isDone,a.checked&&(t+=1),a.setAttribute("data-taskid",n),o.appendChild(a);const i=document.createElement("span");i.innerText=e[n].name,o.appendChild(i),r.appendChild(o)}const o=n.querySelector("progress");o.max=Object.keys(e).length,console.log(t),o.value=t,this.#o=n}#s(){this.#o.querySelectorAll("input").forEach((n=>{n.addEventListener("click",(n=>{const e=n.target.getAttribute("data-taskid");this.#a.tasks[e].isDone=n.target.checked}))}))}}r.populate(),class{static bindEvents(){n.on("updateStorage",r.save)}}.bindEvents(),class{static loadPage(){this.body=document.querySelector("body"),this.#A(),this.#d(),this.#c()}static#d(){const n=document.createElement("div");n.innerHTML="\n            <h2>Dashboard</h2>\n        ",n.id="leftPanel",this.body.appendChild(n)}static#A(){const n=document.createElement("div");n.innerHTML="DewDew.it",n.id="nav",this.body.appendChild(n)}static#c(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New List",n.appendChild(e),e.addEventListener("click",(n=>{this.#l()}));const t=document.createElement("div");t.id="mainContent",this.body.appendChild(t),r.listsStorage.forEach((n=>{t.appendChild(new h(n))}))}static#p(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{this.#l()}));const t=document.createElement("div");t.id="mainContent",this.body.appendChild(t),t.innerHTML='\n                    <div class="content">\n                        <div class="card">\n                            <div class="name">Project 1</div>\n                            <div class="description">\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                Suscipit, dolorem autem rem maiores sunt fugit! Magni\n                                consectetur tenetur placeat ipsam nesciunt beatae\n                                deserunt nisi aut.\n                            </div>\n\n                            <h2>Active Lists</h2>\n                            <ul>\n                                <li>List 1</li>\n                                <li>List 2</li>\n                                <li>List 3</li>\n                                <li>List 4</li>\n                            </ul>\n                            <div class="pending">3 pending tasks in 2 lists.</div>\n                            <progress max="100" value="70"></progress>\n                            <button>Go to project</button>\n                        </div>\n                    </div>'}static#u(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{this.#l()}))}static#l(){const n=document.createElement("div");n.classList.add("modal"),this.body.appendChild(n)}}.loadPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,