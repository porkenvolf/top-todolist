(()=>{"use strict";var n={797:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap);"]),o.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/css/equalize.css"],names:[],mappings:"AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,iCAAiC;AACrC;AACA;;;;IAII,oBAAoB;IACpB,eAAe;AACnB;AACA;;;;IAII,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:["@import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\");\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n}\nbutton,\ninput,\nselect,\ntextarea {\n    font-family: inherit;\n    font-size: 100%;\n}\ninput,\ntextarea,\nselect,\nbutton {\n    width: 150px;\n    box-sizing: border-box;\n}\n"],sourceRoot:""}]);const s=o},25:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,"footer {\n    background: var(--bg-dark);\n    width: 100vw;\n    text-align: center;\n    border-top: 2px solid var(--border);\n}\nfooter a {\n    color: var(--text);\n}\n","",{version:3,sources:["webpack://./src/css/footer.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,mCAAmC;AACvC;AACA;IACI,kBAAkB;AACtB",sourcesContent:["footer {\n    background: var(--bg-dark);\n    width: 100vw;\n    text-align: center;\n    border-top: 2px solid var(--border);\n}\nfooter a {\n    color: var(--text);\n}\n"],sourceRoot:""}]);const s=o},195:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n","",{version:3,sources:["webpack://./src/css/scrollbar.css"],names:[],mappings:"AAAA;IACI,oCAAoC;AACxC;AACA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,0BAA0B;IAC1B,mDAAmD;AACvD;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[":root {\n    scrollbar-color: #acacac transparent;\n}\n::-webkit-scrollbar {\n    height: 12px;\n    width: 8px;\n    background: #000;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #acacac;\n    -webkit-border-radius: 1ex;\n    -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);\n}\n\n::-webkit-scrollbar-corner {\n    background: #000;\n}\n"],sourceRoot:""}]);const s=o},402:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),i=t.n(r),a=t(645),o=t.n(a),s=t(797),d=t(195),A=t(728),c=t(25),l=o()(i());l.i(s.Z),l.i(d.Z),l.i(A.Z),l.i(c.Z),l.push([n.id,'body {\n    min-height: 100vh;\n    background: var(--dark-bg);\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n    display: flex;\n    align-items: center;\n    border: 2px solid transparent;\n    transition: 200ms;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 50rem;\n}\n#mainContent .card #title {\n    display: flex;\n}\n#mainContent .card #title .parentHoverRemoveList {\n    padding: 5px;\n    flex: 0;\n    height: 3rem;\n    transition: 200ms;\n    filter: opacity(0);\n    border-radius: 50px;\n    margin-left: 10px;\n}\n#mainContent .card:hover .parentHoverRemoveList {\n    filter: opacity(1) invert(1) brightness(80%) !important;\n}\n#mainContent .card .parentHoverRemoveList:hover {\n    background: rgb(153, 120, 93);\n}\n#mainContent .card .name {\n    flex: 1;\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--text);\n}\n\n#mainContent ul {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: 1rem;\n    margin: 0 10px;\n    filter: saturate(0);\n}\n#mainContent .card input[type="text"] {\n    background: transparent;\n    border: none;\n    flex: 1;\n    color: var(--text);\n    padding: 5px;\n}\n#mainContent .card .parentHoverRemoveTask {\n    padding: 5px;\n    margin: 0px;\n    background-color: transparent;\n    height: 2rem;\n    filter: opacity(0);\n    transition: 200ms;\n    margin-left: 10px;\n}\n#mainContent .card li:hover .parentHoverRemoveTask {\n    filter: opacity(1) invert(1) brightness(80%);\n}\n#mainContent .card li:hover {\n    border-top: 2px solid var(--border);\n    border-bottom: 2px solid var(--border);\n}\n#mainContent .card .parentHoverRemoveTask:hover {\n    background: rgb(153, 120, 93);\n    border-radius: 50px;\n}\n#mainContent .card .plusIcon {\n    height: 1rem;\n    margin: 0 10px;\n    filter: invert(1) brightness(70%);\n}\n@media (pointer: none), (pointer: coarse) {\n    #mainContent .card #title .parentHoverRemoveList {\n        filter: opacity(1) invert(1) brightness(80%);\n    }\n    #mainContent .card .parentHoverRemoveTask {\n        filter: opacity(1) invert(1) brightness(80%);\n    }\n    li:last-child {\n        border-bottom: none;\n    }\n    li {\n        border-bottom: 2px solid var(--border);\n    }\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAKA;IACI,iBAAiB;IACjB,0BAA0B;IAC1B,aAAa;IACb,0BAA0B;IAC1B,iCAAiC;IACjC,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,aAAa;IACb,eAAe;AACnB;AACA;IACI,qBAAqB;IACrB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,iBAAiB;AACrB;AACA;IACI,0BAA0B;IAC1B,sCAAsC;IACtC,iBAAiB;IACjB,WAAW;IACX,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,cAAc;IACd,cAAc;IACd,yBAAyB;IACzB,qCAAqC;IACrC,aAAa;AACjB;AACA;IACI,cAAc;;IAEd,OAAO;IACP,aAAa;IACb,yBAAyB;IACzB,aAAa;IACb,2DAA2D;IAC3D,SAAS;IACT,qBAAqB;AACzB;AACA;IACI,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,+BAA+B;IAC/B,mBAAmB;IACnB,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,gBAAgB;AACpB;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,OAAO;IACP,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,uDAAuD;AAC3D;AACA;IACI,6BAA6B;AACjC;AACA;IACI,OAAO;IACP,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,cAAc;AAClB;AACA;IACI,WAAW;AACf;AACA;IACI,WAAW;IACX,cAAc;IACd,mBAAmB;AACvB;AACA;IACI,uBAAuB;IACvB,YAAY;IACZ,OAAO;IACP,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,4CAA4C;AAChD;AACA;IACI,mCAAmC;IACnC,sCAAsC;AAC1C;AACA;IACI,6BAA6B;IAC7B,mBAAmB;AACvB;AACA;IACI,YAAY;IACZ,cAAc;IACd,iCAAiC;AACrC;AACA;IACI;QACI,4CAA4C;IAChD;IACA;QACI,4CAA4C;IAChD;IACA;QACI,mBAAmB;IACvB;IACA;QACI,sCAAsC;IAC1C;AACJ",sourcesContent:['@import url(./equalize.css);\n@import url(./scrollbar.css);\n@import url(./variables.css);\n@import url(./footer.css);\n\nbody {\n    min-height: 100vh;\n    background: var(--dark-bg);\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 5rem 5rem 1fr;\n    color: var(--text);\n}\nbutton {\n    border-radius: 50px;\n    padding: 1rem;\n    cursor: pointer;\n}\nli {\n    list-style-type: none;\n    display: flex;\n    align-items: center;\n    border: 2px solid transparent;\n    transition: 200ms;\n}\n#nav {\n    background: var(--dark-bg);\n    border-bottom: 2px solid var(--border);\n    grid-column: 1/-1;\n    grid-row: 1;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    font-size: 2rem;\n    font-weight: bold;\n}\n#leftPanel {\n    grid-row: 2/-1;\n    grid-column: 1;\n    background: var(--mid-bg);\n    border-right: 2px solid var(--border);\n    padding: 1rem;\n}\n#mainContent {\n    grid-row: 3/-1;\n\n    flex: 1;\n    padding: 1rem;\n    background: var(--mid-bg);\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: 1rem;\n    justify-items: center;\n}\n#mainButtons {\n    background: var(--mid-bg);\n    padding: 1rem;\n}\n\n#mainContent .card {\n    background: var(--light-bg);\n    border: 2px solid var(--border);\n    border-radius: 10px;\n    padding: 1rem;\n    max-height: 50vh;\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 50rem;\n}\n#mainContent .card #title {\n    display: flex;\n}\n#mainContent .card #title .parentHoverRemoveList {\n    padding: 5px;\n    flex: 0;\n    height: 3rem;\n    transition: 200ms;\n    filter: opacity(0);\n    border-radius: 50px;\n    margin-left: 10px;\n}\n#mainContent .card:hover .parentHoverRemoveList {\n    filter: opacity(1) invert(1) brightness(80%) !important;\n}\n#mainContent .card .parentHoverRemoveList:hover {\n    background: rgb(153, 120, 93);\n}\n#mainContent .card .name {\n    flex: 1;\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--text);\n}\n\n#mainContent ul {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n#mainContent .card progress {\n    width: 100%;\n    height: 1.5rem;\n}\n#mainContent .card button {\n    width: 100%;\n}\n#mainContent .card input[type="checkbox"] {\n    width: 1rem;\n    margin: 0 10px;\n    filter: saturate(0);\n}\n#mainContent .card input[type="text"] {\n    background: transparent;\n    border: none;\n    flex: 1;\n    color: var(--text);\n    padding: 5px;\n}\n#mainContent .card .parentHoverRemoveTask {\n    padding: 5px;\n    margin: 0px;\n    background-color: transparent;\n    height: 2rem;\n    filter: opacity(0);\n    transition: 200ms;\n    margin-left: 10px;\n}\n#mainContent .card li:hover .parentHoverRemoveTask {\n    filter: opacity(1) invert(1) brightness(80%);\n}\n#mainContent .card li:hover {\n    border-top: 2px solid var(--border);\n    border-bottom: 2px solid var(--border);\n}\n#mainContent .card .parentHoverRemoveTask:hover {\n    background: rgb(153, 120, 93);\n    border-radius: 50px;\n}\n#mainContent .card .plusIcon {\n    height: 1rem;\n    margin: 0 10px;\n    filter: invert(1) brightness(70%);\n}\n@media (pointer: none), (pointer: coarse) {\n    #mainContent .card #title .parentHoverRemoveList {\n        filter: opacity(1) invert(1) brightness(80%);\n    }\n    #mainContent .card .parentHoverRemoveTask {\n        filter: opacity(1) invert(1) brightness(80%);\n    }\n    li:last-child {\n        border-bottom: none;\n    }\n    li {\n        border-bottom: 2px solid var(--border);\n    }\n}\n'],sourceRoot:""}]);const p=l},728:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n","",{version:3,sources:["webpack://./src/css/variables.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[":root {\n    --dark-bg: #111827;\n    --mid-bg: #151d2c;\n    --light-bg: #1f2937;\n    --border: #363f4b;\n    --text: #d1d5db;\n    --text2: #9c9fa4;\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);r&&o[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],s=0;s<n.length;s++){var d=n[s],A=r.base?d[0]+r.base:d[0],c=a[A]||0,l="".concat(A," ").concat(c);a[A]=c+1;var p=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=i(m,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var s=t(a[o]);e[s].references--}for(var d=r(n,i),A=0;A<a.length;A++){var c=t(a[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!n;)n=r[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n={Pubsub:{},on:function(n,e){this.Pubsub[n]=this.Pubsub[n]||[],this.Pubsub[n].push(e)},off:function(n,e){if(this.Pubsub[n])for(var t=0;t<this.Pubsub[n].length;t++)if(this.Pubsub[n][t]===e){this.Pubsub[n].splice(t,1);break}},emit:function(n,e){this.Pubsub[n]&&this.Pubsub[n].forEach((function(n){n(e)}))}};class e{#n;#e;#t;constructor(n,e){this.#n=n,this.#e=e,this.#t=void 0}get name(){return this.#n}set name(n){this.#n=n}get isDone(){return this.#e}set isDone(n){this.#e=n}get dueDate(){return this.#t}set dueDate(n){this.#t=n}get parse(){return{name:this.#n,isDone:this.#e,dueDate:this.#t}}}class r{#r;#n;#i={};#a=[];constructor(n,t,r){if(this.#r=n,this.#n=t,r)for(const n in r)this.#i[n]=new e(r[n].name,r[n].isDone)}get tasks(){return this.#i}set tasks(n){}get name(){return this.#n}set name(n){this.#n=n}get id(){return this.#r}get parse(){let n={};for(const e in this.#i)n[e]=this.#i[e].parse;return{id:this.#r,name:this.#n,tasks:n}}}class i{static#o={};static#s=[];static newList(){const n=Math.random(),e=new r(n,"New List",{});this.#o[n]=e}static clear(){localStorage.clear()}static save(){localStorage.clear();for(const n in this.#o)localStorage.setItem(n,JSON.stringify(this.#o[n].parse))}static load(){this.#o={};for(const n in localStorage)if(Object.hasOwnProperty.call(localStorage,n)){const e=JSON.parse(localStorage[n]);this.#o[e.id]=new r(n,e.name,e.tasks)}}static get listsStorage(){return this.#o}}var a=t(379),o=t.n(a),s=t(795),d=t.n(s),A=t(569),c=t.n(A),l=t(565),p=t.n(l),m=t(216),u=t.n(m),C=t(589),g=t.n(C),b=t(402),h={};h.styleTagTransform=g(),h.setAttributes=p(),h.insert=c().bind(null,"head"),h.domAPI=d(),h.insertStyleElement=u(),o()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals;const v=t.p+"97d4c0a10ac97607dc65.svg",f=t.p+"3cffe9a515498593b872.svg";class B{#d;#A;color;constructor(n){return this.#A=n,this.color={h:255*n.id,s:70,l:70},this.#c(),this.#l(),this.#d}#c(){const n=document.createElement("div");n.classList.add("card"),n.style.borderTop=`20px solid hsl(\n            ${this.color.h},\n            ${this.color.s}%,\n            ${this.color.l}%)`,n.innerHTML="\n            <div id='title'></div>\n            <ul>\n            </ul>\n        ";const e=document.createElement("input");e.type="text",e.classList.add("name"),e.value=this.#A.name,n.querySelector("#title").appendChild(e);const t=document.createElement("img");t.src=v,t.classList="parentHoverRemoveList",n.querySelector("#title").appendChild(t);const r=this.#A.tasks;let i=0;const a=n.querySelector("ul");for(const n in r){const e=document.createElement("li"),t=document.createElement("input");t.type="checkbox",t.checked=r[n].isDone,t.checked&&(i+=1),t.setAttribute("data-taskid",n),e.appendChild(t);const o=document.createElement("input");o.classList.add("task"),o.type="text",o.setAttribute("data-taskid",n),o.value=r[n].name,e.appendChild(o);const s=document.createElement("img");s.src=v,s.classList="parentHoverRemoveTask",s.setAttribute("data-taskid",n),e.appendChild(s),a.appendChild(e)}const o=document.createElement("li"),s=document.createElement("input");s.type="text",s.classList.add("newTask"),s.placeholder="Add new task",s.innerText="";const d=document.createElement("img");d.src=f,d.classList.add("plusIcon"),o.appendChild(d),o.appendChild(s),a.appendChild(o),this.#d=n}#l(){const t=this.#d.querySelector(".name");t.addEventListener("click",(n=>{n.target.select()})),t.addEventListener("change",(e=>{e.preventDefault(),this.#A.name=e.target.value,n.emit("reloadPage")})),this.#d.querySelector(".parentHoverRemoveList").addEventListener("click",(e=>{n.emit("removeList",this.#A)})),this.#d.querySelectorAll('input[type="checkbox"]').forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.getAttribute("data-taskid");this.#A.tasks[t].isDone=e.target.checked,n.emit("reloadPage")}))})),this.#d.querySelectorAll(".task").forEach((e=>{e.addEventListener("change",(e=>{const t=e.target.getAttribute("data-taskid");this.#A.tasks[t].name=e.target.value,n.emit("reloadPage")}))})),this.#d.querySelector(".newTask").addEventListener("change",(t=>{const r=Math.random();this.#A.tasks[r]=new e(t.target.value,!1),n.emit("reloadPage")})),this.#d.querySelectorAll(".parentHoverRemoveTask").forEach((e=>{e.addEventListener("click",(e=>{delete this.#A.tasks[e.target.getAttribute("data-taskid")],n.emit("reloadPage")}))}))}}class I{static loadPage(){this.body=document.querySelector("body"),this.body.innerHTML="",this.#p(),this.#m(),this.body.appendChild(function(n){let e,t=(new Date).getFullYear();e=n,n.includes(t)||(e=e+"-"+t+" - ");const r=document.createElement("footer");return r.innerHTML=`\n    <small>\n        &copy; Copyright ${e}\n        <a href="https://github.com/porkenvolf" target="”_blank”">\n            Porkenvölf\n        </a>\n    </small>\n    `,r.style.display="flex",r.style.justifyContent="center",r.style.alignItems="center",r.style.height="3rem",r}("2023"))}static#u(){const n=document.createElement("div");n.innerHTML="\n            <h1>Filters</h1>\n            <h2>Tags</h2>\n        ",n.id="leftPanel",this.body.appendChild(n)}static#p(){const n=document.createElement("div");n.innerHTML="DewDew.it",n.id="nav",this.body.appendChild(n)}static#m(){const e=document.createElement("div");e.id="mainButtons",this.body.appendChild(e);const t=document.createElement("button");t.innerText="New List",e.appendChild(t),t.addEventListener("click",(e=>{n.emit("newList")}));const r=document.createElement("div");r.id="mainContent",this.body.appendChild(r);const a=i.listsStorage;for(const n in a)r.appendChild(new B(a[n]))}static#C(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{}));const t=document.createElement("div");t.id="mainContent",this.body.appendChild(t),t.innerHTML='\n                    <div class="content">\n                        <div class="card">\n                            <div class="name">Project 1</div>\n                            <div class="description">\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                                Suscipit, dolorem autem rem maiores sunt fugit! Magni\n                                consectetur tenetur placeat ipsam nesciunt beatae\n                                deserunt nisi aut.\n                            </div>\n\n                            <h2>Active Lists</h2>\n                            <ul>\n                                <li>List 1</li>\n                                <li>List 2</li>\n                                <li>List 3</li>\n                                <li>List 4</li>\n                            </ul>\n                            <div class="pending">3 pending tasks in 2 lists.</div>\n                            <progress max="100" value="70"></progress>\n                            <button>Go to project</button>\n                        </div>\n                    </div>'}static#g(){const n=document.createElement("div");n.id="mainButtons",this.body.appendChild(n);const e=document.createElement("button");e.innerText="New Project",n.appendChild(e),e.addEventListener("click",(n=>{}))}}(class{static bindEvents(){n.on("save",(()=>{i.save()})),n.on("load",(()=>{i.load()})),n.on("reloadPage",(()=>{n.emit("save"),I.loadPage()})),n.on("newList",(()=>{i.newList(),n.emit("reloadPage")})),n.on("removeList",(e=>{delete i.listsStorage[e.id],n.emit("reloadPage")}))}}).bindEvents(),n.emit("load"),I.loadPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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akJNLEtBQUtnTSxLQUFLMUgsWUFBWXVJLEdBRXRCLE1BQU1JLEVBQWdCcEosU0FBU1csY0FBYyxVQUM3Q3lJLEVBQWM3QixVQUFZLGNBQzFCeUIsRUFBWXZJLFlBQVkySSxHQUN4QkEsRUFBYzFCLGlCQUFpQixTQUFVQyxJQUFELElBR3hDLE1BQU11QixFQUFjbEosU0FBU1csY0FBYyxPQUMzQ3VJLEVBQVlyTixHQUFLLGNBQ2pCTSxLQUFLZ00sS0FBSzFILFlBQVl5SSxHQUV0QkEsRUFBWTNDLFVBQVksNm5DQXVCNUIsQ0FDQSxRQUFPLEdBRUgsTUFBTXlDLEVBQWNoSixTQUFTVyxjQUFjLE9BQzNDcUksRUFBWW5OLEdBQUssY0FDakJNLEtBQUtnTSxLQUFLMUgsWUFBWXVJLEdBR3RCLE1BQU1JLEVBQWdCcEosU0FBU1csY0FBYyxVQUM3Q3lJLEVBQWM3QixVQUFZLGNBQzFCeUIsRUFBWXZJLFlBQVkySSxHQUN4QkEsRUFBYzFCLGlCQUFpQixTQUFVQyxJQUFELEdBQzVDLEdFdEdXLE1BQ1gsaUJBQU8wQixHQUNILEVBQU92RixHQUFHLFFBQVEsS0FDZG9CLEVBQVFPLE1BQU0sSUFFbEIsRUFBTzNCLEdBQUcsUUFBUSxLQUNkb0IsRUFBUVMsTUFBTSxJQUdsQixFQUFPN0IsR0FBRyxjQUFjLEtBQ3BCLEVBQU9JLEtBQUssUUFDWitELEVBQUdDLFVBQVUsSUFFakIsRUFBT3BFLEdBQUcsV0FBVyxLQUNqQm9CLEVBQVE1RixVQUNSLEVBQU80RSxLQUFLLGFBQWEsSUFFN0IsRUFBT0osR0FBRyxjQUFlbkcsV0FDZHVILEVBQVFVLGFBQWFqSSxFQUFLOUIsSUFFakMsRUFBT3FJLEtBQUssYUFBYSxHQUVqQyxJQ3JCWW1GLGFBRWhCLEVBQU9uRixLQUFLLFFBQ1orRCxFQUFHQyxVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vc3JjL2Nzcy9lcXVhbGl6ZS5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vc3JjL2Nzcy9mb290ZXIuY3NzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9jc3Mvc2Nyb2xsYmFyLmNzcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9zcmMvY3NzL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9zcmMvY3NzL3ZhcmlhYmxlcy5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9zcmMvUHVic3ViLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9UYXNrLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9MaXN0LmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9TdG9yYWdlLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9jc3Mvc3R5bGUuY3NzPzlmY2QiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vc3JjL1VJX0xpc3QuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vc3JjL1VJLmpzIiwid2VicGFjazovL3RvcC10b2RvbGlzdC8uL3NyYy9mb290ZXIuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG9saXN0Ly4vc3JjL0V2ZW50c0ludGVyZmFjZS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kb2xpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEAzMDA7NDAwOzUwMDs3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbn1cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbn1cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3QsXG5idXR0b24ge1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2VxdWFsaXplLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFDQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0lBQ3RCLGlDQUFpQztBQUNyQztBQUNBOzs7O0lBSUksb0JBQW9CO0lBQ3BCLGVBQWU7QUFDbkI7QUFDQTs7OztJQUlJLFlBQVk7SUFDWixzQkFBc0I7QUFDMUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoXFxcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOndnaHRAMzAwOzQwMDs1MDA7NzAwJmRpc3BsYXk9c3dhcFxcXCIpO1xcbioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG59XFxuYnV0dG9uLFxcbmlucHV0LFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcbiAgICBmb250LXNpemU6IDEwMCU7XFxufVxcbmlucHV0LFxcbnRleHRhcmVhLFxcbnNlbGVjdCxcXG5idXR0b24ge1xcbiAgICB3aWR0aDogMTUwcHg7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1iZy1kYXJrKTtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xufVxuZm9vdGVyIGEge1xuICAgIGNvbG9yOiB2YXIoLS10ZXh0KTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9mb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUNBQW1DO0FBQ3ZDO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiZm9vdGVyIHtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmctZGFyayk7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG59XFxuZm9vdGVyIGEge1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgOnJvb3Qge1xuICAgIHNjcm9sbGJhci1jb2xvcjogI2FjYWNhYyB0cmFuc3BhcmVudDtcbn1cbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIGhlaWdodDogMTJweDtcbiAgICB3aWR0aDogOHB4O1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgIGJhY2tncm91bmQ6ICNhY2FjYWM7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxZXg7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyLWNvcm5lciB7XG4gICAgYmFja2dyb3VuZDogIzAwMDtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zY3JvbGxiYXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxZQUFZO0lBQ1osVUFBVTtJQUNWLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQiwwQkFBMEI7SUFDMUIsbURBQW1EO0FBQ3ZEOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gICAgc2Nyb2xsYmFyLWNvbG9yOiAjYWNhY2FjIHRyYW5zcGFyZW50O1xcbn1cXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gICAgaGVpZ2h0OiAxMnB4O1xcbiAgICB3aWR0aDogOHB4O1xcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xcbn1cXG5cXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcXG4gICAgYmFja2dyb3VuZDogI2FjYWNhYztcXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxZXg7XFxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcXG59XFxuXFxuOjotd2Via2l0LXNjcm9sbGJhci1jb3JuZXIge1xcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZXF1YWxpemUuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc2Nyb2xsYmFyLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzNfX18gZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9mb290ZXIuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMV9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMl9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfM19fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWRhcmstYmcpO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1cmVtIDVyZW0gMWZyO1xuICAgIGNvbG9yOiB2YXIoLS10ZXh0KTtcbn1cbmJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cbmxpIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIHRyYW5zaXRpb246IDIwMG1zO1xufVxuI25hdiB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tZGFyay1iZyk7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XG4gICAgZ3JpZC1jb2x1bW46IDEvLTE7XG4gICAgZ3JpZC1yb3c6IDE7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuI2xlZnRQYW5lbCB7XG4gICAgZ3JpZC1yb3c6IDIvLTE7XG4gICAgZ3JpZC1jb2x1bW46IDE7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tbWlkLWJnKTtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xuICAgIHBhZGRpbmc6IDFyZW07XG59XG4jbWFpbkNvbnRlbnQge1xuICAgIGdyaWQtcm93OiAzLy0xO1xuXG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLW1pZC1iZyk7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1MHB4LCAxZnIpKTtcbiAgICBnYXA6IDFyZW07XG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xufVxuI21haW5CdXR0b25zIHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1taWQtYmcpO1xuICAgIHBhZGRpbmc6IDFyZW07XG59XG5cbiNtYWluQ29udGVudCAuY2FyZCB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tbGlnaHQtYmcpO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIG1heC1oZWlnaHQ6IDUwdmg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDFyZW07XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA1MHJlbTtcbn1cbiNtYWluQ29udGVudCAuY2FyZCAjdGl0bGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG4jbWFpbkNvbnRlbnQgLmNhcmQgI3RpdGxlIC5wYXJlbnRIb3ZlclJlbW92ZUxpc3Qge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBmbGV4OiAwO1xuICAgIGhlaWdodDogM3JlbTtcbiAgICB0cmFuc2l0aW9uOiAyMDBtcztcbiAgICBmaWx0ZXI6IG9wYWNpdHkoMCk7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbiNtYWluQ29udGVudCAuY2FyZDpob3ZlciAucGFyZW50SG92ZXJSZW1vdmVMaXN0IHtcbiAgICBmaWx0ZXI6IG9wYWNpdHkoMSkgaW52ZXJ0KDEpIGJyaWdodG5lc3MoODAlKSAhaW1wb3J0YW50O1xufVxuI21haW5Db250ZW50IC5jYXJkIC5wYXJlbnRIb3ZlclJlbW92ZUxpc3Q6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHJnYigxNTMsIDEyMCwgOTMpO1xufVxuI21haW5Db250ZW50IC5jYXJkIC5uYW1lIHtcbiAgICBmbGV4OiAxO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XG59XG5cbiNtYWluQ29udGVudCB1bCB7XG4gICAgZmxleDogMTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4jbWFpbkNvbnRlbnQgLmNhcmQgcHJvZ3Jlc3Mge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMS41cmVtO1xufVxuI21haW5Db250ZW50IC5jYXJkIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4jbWFpbkNvbnRlbnQgLmNhcmQgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcbiAgICB3aWR0aDogMXJlbTtcbiAgICBtYXJnaW46IDAgMTBweDtcbiAgICBmaWx0ZXI6IHNhdHVyYXRlKDApO1xufVxuI21haW5Db250ZW50IC5jYXJkIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZmxleDogMTtcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XG4gICAgcGFkZGluZzogNXB4O1xufVxuI21haW5Db250ZW50IC5jYXJkIC5wYXJlbnRIb3ZlclJlbW92ZVRhc2sge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBtYXJnaW46IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBoZWlnaHQ6IDJyZW07XG4gICAgZmlsdGVyOiBvcGFjaXR5KDApO1xuICAgIHRyYW5zaXRpb246IDIwMG1zO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuI21haW5Db250ZW50IC5jYXJkIGxpOmhvdmVyIC5wYXJlbnRIb3ZlclJlbW92ZVRhc2sge1xuICAgIGZpbHRlcjogb3BhY2l0eSgxKSBpbnZlcnQoMSkgYnJpZ2h0bmVzcyg4MCUpO1xufVxuI21haW5Db250ZW50IC5jYXJkIGxpOmhvdmVyIHtcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcbn1cbiNtYWluQ29udGVudCAuY2FyZCAucGFyZW50SG92ZXJSZW1vdmVUYXNrOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMTUzLCAxMjAsIDkzKTtcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xufVxuI21haW5Db250ZW50IC5jYXJkIC5wbHVzSWNvbiB7XG4gICAgaGVpZ2h0OiAxcmVtO1xuICAgIG1hcmdpbjogMCAxMHB4O1xuICAgIGZpbHRlcjogaW52ZXJ0KDEpIGJyaWdodG5lc3MoNzAlKTtcbn1cbkBtZWRpYSAocG9pbnRlcjogbm9uZSksIChwb2ludGVyOiBjb2Fyc2UpIHtcbiAgICAjbWFpbkNvbnRlbnQgLmNhcmQgI3RpdGxlIC5wYXJlbnRIb3ZlclJlbW92ZUxpc3Qge1xuICAgICAgICBmaWx0ZXI6IG9wYWNpdHkoMSkgaW52ZXJ0KDEpIGJyaWdodG5lc3MoODAlKTtcbiAgICB9XG4gICAgI21haW5Db250ZW50IC5jYXJkIC5wYXJlbnRIb3ZlclJlbW92ZVRhc2sge1xuICAgICAgICBmaWx0ZXI6IG9wYWNpdHkoMSkgaW52ZXJ0KDEpIGJyaWdodG5lc3MoODAlKTtcbiAgICB9XG4gICAgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgfVxuICAgIGxpIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XG4gICAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFLQTtJQUNJLGlCQUFpQjtJQUNqQiwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLDBCQUEwQjtJQUMxQixpQ0FBaUM7SUFDakMsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGVBQWU7QUFDbkI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixzQ0FBc0M7SUFDdEMsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsY0FBYztJQUNkLHlCQUF5QjtJQUN6QixxQ0FBcUM7SUFDckMsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksY0FBYzs7SUFFZCxPQUFPO0lBQ1AsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsMkRBQTJEO0lBQzNELFNBQVM7SUFDVCxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLCtCQUErQjtJQUMvQixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsU0FBUztJQUNULHNCQUFzQjtJQUN0Qiw4QkFBOEI7SUFDOUIsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLE9BQU87SUFDUCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSx1REFBdUQ7QUFDM0Q7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksT0FBTztJQUNQLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksT0FBTztJQUNQLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2QsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLE9BQU87SUFDUCxrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSw0Q0FBNEM7QUFDaEQ7QUFDQTtJQUNJLG1DQUFtQztJQUNuQyxzQ0FBc0M7QUFDMUM7QUFDQTtJQUNJLDZCQUE2QjtJQUM3QixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2QsaUNBQWlDO0FBQ3JDO0FBQ0E7SUFDSTtRQUNJLDRDQUE0QztJQUNoRDtJQUNBO1FBQ0ksNENBQTRDO0lBQ2hEO0lBQ0E7UUFDSSxtQkFBbUI7SUFDdkI7SUFDQTtRQUNJLHNDQUFzQztJQUMxQztBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKC4vZXF1YWxpemUuY3NzKTtcXG5AaW1wb3J0IHVybCguL3Njcm9sbGJhci5jc3MpO1xcbkBpbXBvcnQgdXJsKC4vdmFyaWFibGVzLmNzcyk7XFxuQGltcG9ydCB1cmwoLi9mb290ZXIuY3NzKTtcXG5cXG5ib2R5IHtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLWRhcmstYmcpO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1cmVtIDVyZW0gMWZyO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XFxufVxcbmJ1dHRvbiB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxubGkge1xcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgICB0cmFuc2l0aW9uOiAyMDBtcztcXG59XFxuI25hdiB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLWRhcmstYmcpO1xcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG4gICAgZ3JpZC1jb2x1bW46IDEvLTE7XFxuICAgIGdyaWQtcm93OiAxO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG4jbGVmdFBhbmVsIHtcXG4gICAgZ3JpZC1yb3c6IDIvLTE7XFxuICAgIGdyaWQtY29sdW1uOiAxO1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1taWQtYmcpO1xcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbn1cXG4jbWFpbkNvbnRlbnQge1xcbiAgICBncmlkLXJvdzogMy8tMTtcXG5cXG4gICAgZmxleDogMTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tbWlkLWJnKTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzNTBweCwgMWZyKSk7XFxuICAgIGdhcDogMXJlbTtcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbn1cXG4jbWFpbkJ1dHRvbnMge1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1taWQtYmcpO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbn1cXG5cXG4jbWFpbkNvbnRlbnQgLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1saWdodC1iZyk7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIG1heC1oZWlnaHQ6IDUwdmg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMXJlbTtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWF4LXdpZHRoOiA1MHJlbTtcXG59XFxuI21haW5Db250ZW50IC5jYXJkICN0aXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcbiNtYWluQ29udGVudCAuY2FyZCAjdGl0bGUgLnBhcmVudEhvdmVyUmVtb3ZlTGlzdCB7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgZmxleDogMDtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICB0cmFuc2l0aW9uOiAyMDBtcztcXG4gICAgZmlsdGVyOiBvcGFjaXR5KDApO1xcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXG59XFxuI21haW5Db250ZW50IC5jYXJkOmhvdmVyIC5wYXJlbnRIb3ZlclJlbW92ZUxpc3Qge1xcbiAgICBmaWx0ZXI6IG9wYWNpdHkoMSkgaW52ZXJ0KDEpIGJyaWdodG5lc3MoODAlKSAhaW1wb3J0YW50O1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgLnBhcmVudEhvdmVyUmVtb3ZlTGlzdDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQ6IHJnYigxNTMsIDEyMCwgOTMpO1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgLm5hbWUge1xcbiAgICBmbGV4OiAxO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XFxufVxcblxcbiNtYWluQ29udGVudCB1bCB7XFxuICAgIGZsZXg6IDE7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbiNtYWluQ29udGVudCAuY2FyZCBwcm9ncmVzcyB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG59XFxuI21haW5Db250ZW50IC5jYXJkIGJ1dHRvbiB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgaW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXSB7XFxuICAgIHdpZHRoOiAxcmVtO1xcbiAgICBtYXJnaW46IDAgMTBweDtcXG4gICAgZmlsdGVyOiBzYXR1cmF0ZSgwKTtcXG59XFxuI21haW5Db250ZW50IC5jYXJkIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXSB7XFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGZsZXg6IDE7XFxuICAgIGNvbG9yOiB2YXIoLS10ZXh0KTtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgLnBhcmVudEhvdmVyUmVtb3ZlVGFzayB7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgbWFyZ2luOiAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGZpbHRlcjogb3BhY2l0eSgwKTtcXG4gICAgdHJhbnNpdGlvbjogMjAwbXM7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgbGk6aG92ZXIgLnBhcmVudEhvdmVyUmVtb3ZlVGFzayB7XFxuICAgIGZpbHRlcjogb3BhY2l0eSgxKSBpbnZlcnQoMSkgYnJpZ2h0bmVzcyg4MCUpO1xcbn1cXG4jbWFpbkNvbnRlbnQgLmNhcmQgbGk6aG92ZXIge1xcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWJvcmRlcik7XFxufVxcbiNtYWluQ29udGVudCAuY2FyZCAucGFyZW50SG92ZXJSZW1vdmVUYXNrOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogcmdiKDE1MywgMTIwLCA5Myk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XFxufVxcbiNtYWluQ29udGVudCAuY2FyZCAucGx1c0ljb24ge1xcbiAgICBoZWlnaHQ6IDFyZW07XFxuICAgIG1hcmdpbjogMCAxMHB4O1xcbiAgICBmaWx0ZXI6IGludmVydCgxKSBicmlnaHRuZXNzKDcwJSk7XFxufVxcbkBtZWRpYSAocG9pbnRlcjogbm9uZSksIChwb2ludGVyOiBjb2Fyc2UpIHtcXG4gICAgI21haW5Db250ZW50IC5jYXJkICN0aXRsZSAucGFyZW50SG92ZXJSZW1vdmVMaXN0IHtcXG4gICAgICAgIGZpbHRlcjogb3BhY2l0eSgxKSBpbnZlcnQoMSkgYnJpZ2h0bmVzcyg4MCUpO1xcbiAgICB9XFxuICAgICNtYWluQ29udGVudCAuY2FyZCAucGFyZW50SG92ZXJSZW1vdmVUYXNrIHtcXG4gICAgICAgIGZpbHRlcjogb3BhY2l0eSgxKSBpbnZlcnQoMSkgYnJpZ2h0bmVzcyg4MCUpO1xcbiAgICB9XFxuICAgIGxpOmxhc3QtY2hpbGQge1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gICAgfVxcbiAgICBsaSB7XFxuICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tYm9yZGVyKTtcXG4gICAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcbiAgICAtLWRhcmstYmc6ICMxMTE4Mjc7XG4gICAgLS1taWQtYmc6ICMxNTFkMmM7XG4gICAgLS1saWdodC1iZzogIzFmMjkzNztcbiAgICAtLWJvcmRlcjogIzM2M2Y0YjtcbiAgICAtLXRleHQ6ICNkMWQ1ZGI7XG4gICAgLS10ZXh0MjogIzljOWZhNDtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy92YXJpYWJsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgICAtLWRhcmstYmc6ICMxMTE4Mjc7XFxuICAgIC0tbWlkLWJnOiAjMTUxZDJjO1xcbiAgICAtLWxpZ2h0LWJnOiAjMWYyOTM3O1xcbiAgICAtLWJvcmRlcjogIzM2M2Y0YjtcXG4gICAgLS10ZXh0OiAjZDFkNWRiO1xcbiAgICAtLXRleHQyOiAjOWM5ZmE0O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvKiBcbuKWiOKWgOKWhCDilogg4paIIOKWiOKWiOKWhCDiloTiloDiloAg4paIIOKWiCDilojilojiloQgXG7ilojiloAgIOKWgOKWhOKWiCDilojiloTilogg4paE4paI4paAIOKWgOKWhOKWiCDilojiloTiloggICovXG4vKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9sZWFybmNvZGVhY2FkZW15Lzc3NzM0OTc0N2Q4MzgyYmZiNzIyICovXG52YXIgUHVic3ViID0ge1xuICAgIFB1YnN1Yjoge30sXG4gICAgb246IGZ1bmN0aW9uIChldmVudE5hbWUsIGZuKSB7XG4gICAgICAgIHRoaXMuUHVic3ViW2V2ZW50TmFtZV0gPSB0aGlzLlB1YnN1YltldmVudE5hbWVdIHx8IFtdO1xuICAgICAgICB0aGlzLlB1YnN1YltldmVudE5hbWVdLnB1c2goZm4pO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBmbikge1xuICAgICAgICBpZiAodGhpcy5QdWJzdWJbZXZlbnROYW1lXSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLlB1YnN1YltldmVudE5hbWVdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuUHVic3ViW2V2ZW50TmFtZV1baV0gPT09IGZuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHVic3ViW2V2ZW50TmFtZV0uc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGVtaXQ6IGZ1bmN0aW9uIChldmVudE5hbWUsIGRhdGEpIHtcbiAgICAgICAgaWYgKHRoaXMuUHVic3ViW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgICAgIHRoaXMuUHVic3ViW2V2ZW50TmFtZV0uZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgICAgICAgICBmbihkYXRhKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFB1YnN1YjtcbiIsImltcG9ydCBQdWJzdWIgZnJvbSBcIi4vUHVic3ViXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhc2sge1xuICAgICNuYW1lO1xuICAgICNpc0RvbmU7XG4gICAgI2R1ZURhdGU7XG4gICAgY29uc3RydWN0b3IobmFtZSwgX2lzRG9uZSkge1xuICAgICAgICB0aGlzLiNuYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy4jaXNEb25lID0gX2lzRG9uZTtcbiAgICAgICAgdGhpcy4jZHVlRGF0ZSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNuYW1lO1xuICAgIH1cbiAgICBzZXQgbmFtZShhcmcpIHtcbiAgICAgICAgdGhpcy4jbmFtZSA9IGFyZztcbiAgICB9XG4gICAgZ2V0IGlzRG9uZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2lzRG9uZTtcbiAgICB9XG4gICAgc2V0IGlzRG9uZShhcmcpIHtcbiAgICAgICAgdGhpcy4jaXNEb25lID0gYXJnO1xuICAgIH1cbiAgICBnZXQgZHVlRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2R1ZURhdGU7XG4gICAgfVxuICAgIHNldCBkdWVEYXRlKGFyZykge1xuICAgICAgICB0aGlzLiNkdWVEYXRlID0gYXJnO1xuICAgIH1cbiAgICBnZXQgcGFyc2UoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLiNuYW1lLFxuICAgICAgICAgICAgaXNEb25lOiB0aGlzLiNpc0RvbmUsXG4gICAgICAgICAgICBkdWVEYXRlOiB0aGlzLiNkdWVEYXRlLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiIsImltcG9ydCBUYXNrIGZyb20gXCIuL1Rhc2tcIjtcbmltcG9ydCBQdWJzdWIgZnJvbSBcIi4vUHVic3ViXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3Qge1xuICAgICNpZDtcbiAgICAjbmFtZTtcbiAgICAjdGFza3MgPSB7fTtcbiAgICAjdGFncyA9IFtdO1xuICAgIGNvbnN0cnVjdG9yKF9pZCwgX25hbWUsIF9vYmpUYXNrcykge1xuICAgICAgICB0aGlzLiNpZCA9IF9pZDtcbiAgICAgICAgdGhpcy4jbmFtZSA9IF9uYW1lO1xuICAgICAgICBpZiAoX29ialRhc2tzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBfb2JqVGFza3MpIHtcbiAgICAgICAgICAgICAgICB0aGlzLiN0YXNrc1trZXldID0gbmV3IFRhc2soXG4gICAgICAgICAgICAgICAgICAgIF9vYmpUYXNrc1trZXldLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIF9vYmpUYXNrc1trZXldLmlzRG9uZVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgdGFza3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiN0YXNrcztcbiAgICB9XG4gICAgc2V0IHRhc2tzKGFyZykge31cbiAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI25hbWU7XG4gICAgfVxuICAgIHNldCBuYW1lKGFyZykge1xuICAgICAgICB0aGlzLiNuYW1lID0gYXJnO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNpZDtcbiAgICB9XG4gICAgZ2V0IHBhcnNlKCkge1xuICAgICAgICBsZXQgb3V0cHV0VGFza3MgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy4jdGFza3MpIHtcbiAgICAgICAgICAgIG91dHB1dFRhc2tzW2tleV0gPSB0aGlzLiN0YXNrc1trZXldLnBhcnNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGlkOiB0aGlzLiNpZCwgbmFtZTogdGhpcy4jbmFtZSwgdGFza3M6IG91dHB1dFRhc2tzIH07XG4gICAgfVxufVxuIiwiaW1wb3J0IExpc3QgZnJvbSBcIi4vTGlzdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9yYWdlIHtcbiAgICBzdGF0aWMgI2xpc3RzU3RvcmFnZSA9IHt9O1xuICAgIHN0YXRpYyAjdGVzdFN0b3JhZ2UgPSBbXTtcblxuICAgIC8qICBzdGF0aWMgcG9wdWxhdGUoKSB7XG4gICAgICAgIHRoaXMuI2xpc3RzU3RvcmFnZSA9IE9iamVjdC5hc3NpZ24oe30pO1xuICAgICAgICBuZXcgTGlzdCh0aGlzLiNsaXN0c1N0b3JhZ2UubGVuZ3RoLCBcIkRlZmF1bHQgTGlzdFwiLCB7XG4gICAgICAgICAgICAwOiB7IG5hbWU6IFwiZHNhXCIsIGlzRG9uZTogdHJ1ZSB9LFxuICAgICAgICAgICAgMTogeyBuYW1lOiBcInRlc3RcIiwgaXNEb25lOiBmYWxzZSB9LFxuICAgICAgICB9KTtcbiAgICB9ICovXG5cbiAgICBzdGF0aWMgbmV3TGlzdCgpIHtcbiAgICAgICAgY29uc3QgbmV3SUQgPSBNYXRoLnJhbmRvbSgpO1xuICAgICAgICBjb25zdCBuZXdMaXN0ID0gbmV3IExpc3QobmV3SUQsIFwiTmV3IExpc3RcIiwge30pO1xuICAgICAgICB0aGlzLiNsaXN0c1N0b3JhZ2VbbmV3SURdID0gbmV3TGlzdDtcbiAgICB9XG5cbiAgICBzdGF0aWMgY2xlYXIoKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xuICAgIH1cblxuICAgIHN0YXRpYyBzYXZlKCkge1xuICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcblxuICAgICAgICAvKiB0aGlzLiNsaXN0c1N0b3JhZ2UuZm9yRWFjaCgobGlzdCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGluZGV4LCBKU09OLnN0cmluZ2lmeShsaXN0LnBhcnNlKSk7XG4gICAgICAgICAgICBjb25zdCBzYXZlQ2hlY2sgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShpbmRleCk7XG4gICAgICAgIH0pOyAqL1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLiNsaXN0c1N0b3JhZ2UpIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeSh0aGlzLiNsaXN0c1N0b3JhZ2Vba2V5XS5wYXJzZSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGxvYWQoKSB7XG4gICAgICAgIHRoaXMuI2xpc3RzU3RvcmFnZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBsb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChsb2NhbFN0b3JhZ2UsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2Vba2V5XSk7XG4gICAgICAgICAgICAgICAgdGhpcy4jbGlzdHNTdG9yYWdlW2l0ZW0uaWRdID0gbmV3IExpc3QoXG4gICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBpdGVtLnRhc2tzXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgbGlzdHNTdG9yYWdlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jbGlzdHNTdG9yYWdlO1xuICAgIH1cbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBQdWJzdWIgZnJvbSBcIi4vUHVic3ViXCI7XG5pbXBvcnQgVGFzayBmcm9tIFwiLi9UYXNrXCI7XG5pbXBvcnQgaW1nQ2xvc2UgZnJvbSBcIi4vaW1nL2Nsb3NlLnN2Z1wiO1xuaW1wb3J0IGltZ1BsdXMgZnJvbSBcIi4vaW1nL3BsdXMuc3ZnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJX0xpc3Qge1xuICAgICNkaXZDYXJkO1xuICAgICNsaXN0O1xuICAgIGNvbG9yO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy4jbGlzdCA9IGVsZW1lbnQ7XG4gICAgICAgIHRoaXMuY29sb3IgPSB7IGg6IGVsZW1lbnQuaWQgKiAyNTUsIHM6IDcwLCBsOiA3MCB9O1xuICAgICAgICB0aGlzLiNyZW5kZXIoKTtcbiAgICAgICAgdGhpcy4jYmluZEV2ZW50cygpO1xuXG4gICAgICAgIHJldHVybiB0aGlzLiNkaXZDYXJkO1xuICAgIH1cblxuICAgICNyZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGRpdkNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBkaXZDYXJkLmNsYXNzTGlzdC5hZGQoXCJjYXJkXCIpO1xuICAgICAgICBkaXZDYXJkLnN0eWxlLmJvcmRlclRvcCA9IGAyMHB4IHNvbGlkIGhzbChcbiAgICAgICAgICAgICR7dGhpcy5jb2xvci5ofSxcbiAgICAgICAgICAgICR7dGhpcy5jb2xvci5zfSUsXG4gICAgICAgICAgICAke3RoaXMuY29sb3IubH0lKWA7XG5cbiAgICAgICAgZGl2Q2FyZC5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8ZGl2IGlkPSd0aXRsZSc+PC9kaXY+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICBgO1xuICAgICAgICAvL0lOUFVUIFRJVExFXG4gICAgICAgIGNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIGlucHV0VGl0bGUudHlwZSA9IFwidGV4dFwiO1xuICAgICAgICBpbnB1dFRpdGxlLmNsYXNzTGlzdC5hZGQoXCJuYW1lXCIpO1xuICAgICAgICBpbnB1dFRpdGxlLnZhbHVlID0gdGhpcy4jbGlzdC5uYW1lO1xuICAgICAgICBkaXZDYXJkLnF1ZXJ5U2VsZWN0b3IoXCIjdGl0bGVcIikuYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZSk7XG5cbiAgICAgICAgLy9SRU1PVkUgTElTVFxuICAgICAgICBjb25zdCByZW1vdmVMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgcmVtb3ZlTGlzdC5zcmMgPSBpbWdDbG9zZTtcbiAgICAgICAgcmVtb3ZlTGlzdC5jbGFzc0xpc3QgPSBcInBhcmVudEhvdmVyUmVtb3ZlTGlzdFwiO1xuICAgICAgICBkaXZDYXJkLnF1ZXJ5U2VsZWN0b3IoXCIjdGl0bGVcIikuYXBwZW5kQ2hpbGQocmVtb3ZlTGlzdCk7XG5cbiAgICAgICAgLy9UQVNLU1xuICAgICAgICBjb25zdCB0YXNrTGlzdCA9IHRoaXMuI2xpc3QudGFza3M7XG4gICAgICAgIGxldCBhbW91bnREb25lID0gMDtcbiAgICAgICAgY29uc3QgdWxUYXNrcyA9IGRpdkNhcmQucXVlcnlTZWxlY3RvcihcInVsXCIpO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0YXNrTGlzdCkge1xuICAgICAgICAgICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG5cbiAgICAgICAgICAgIC8vRUFDSCBDSEVDS0JPWFxuICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICBjaGVja2JveC50eXBlID0gXCJjaGVja2JveFwiO1xuICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IHRhc2tMaXN0W2tleV0uaXNEb25lO1xuICAgICAgICAgICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIGFtb3VudERvbmUgKz0gMTtcbiAgICAgICAgICAgIGNoZWNrYm94LnNldEF0dHJpYnV0ZShcImRhdGEtdGFza2lkXCIsIGtleSk7XG4gICAgICAgICAgICBsaS5hcHBlbmRDaGlsZChjaGVja2JveCk7XG5cbiAgICAgICAgICAgIC8vRUFDSCBMQUJFTC9JTlBVVFxuICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICBsYWJlbC5jbGFzc0xpc3QuYWRkKFwidGFza1wiKTtcbiAgICAgICAgICAgIGxhYmVsLnR5cGUgPSBcInRleHRcIjtcbiAgICAgICAgICAgIGxhYmVsLnNldEF0dHJpYnV0ZShcImRhdGEtdGFza2lkXCIsIGtleSk7XG4gICAgICAgICAgICBsYWJlbC52YWx1ZSA9IHRhc2tMaXN0W2tleV0ubmFtZTtcbiAgICAgICAgICAgIGxpLmFwcGVuZENoaWxkKGxhYmVsKTtcblxuICAgICAgICAgICAgLy9FQUNIIHJlbW92ZVRhc2sgQlVUVE9OXG4gICAgICAgICAgICBjb25zdCByZW1vdmVUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgICAgIHJlbW92ZVRhc2suc3JjID0gaW1nQ2xvc2U7XG4gICAgICAgICAgICByZW1vdmVUYXNrLmNsYXNzTGlzdCA9IFwicGFyZW50SG92ZXJSZW1vdmVUYXNrXCI7XG4gICAgICAgICAgICByZW1vdmVUYXNrLnNldEF0dHJpYnV0ZShcImRhdGEtdGFza2lkXCIsIGtleSk7XG4gICAgICAgICAgICBsaS5hcHBlbmRDaGlsZChyZW1vdmVUYXNrKTtcblxuICAgICAgICAgICAgdWxUYXNrcy5hcHBlbmRDaGlsZChsaSk7XG4gICAgICAgIH1cblxuICAgICAgICAvL0FERCBORVcgVEFTS1xuICAgICAgICBjb25zdCBuZXdUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICBjb25zdCBuZXdUYXNrTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIG5ld1Rhc2tMYWJlbC50eXBlID0gXCJ0ZXh0XCI7XG4gICAgICAgIG5ld1Rhc2tMYWJlbC5jbGFzc0xpc3QuYWRkKFwibmV3VGFza1wiKTtcbiAgICAgICAgbmV3VGFza0xhYmVsLnBsYWNlaG9sZGVyID0gXCJBZGQgbmV3IHRhc2tcIjtcbiAgICAgICAgbmV3VGFza0xhYmVsLmlubmVyVGV4dCA9IFwiXCI7XG5cbiAgICAgICAgY29uc3QgcGx1cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgICAgIHBsdXMuc3JjID0gaW1nUGx1cztcbiAgICAgICAgcGx1cy5jbGFzc0xpc3QuYWRkKFwicGx1c0ljb25cIik7XG4gICAgICAgIG5ld1Rhc2suYXBwZW5kQ2hpbGQocGx1cyk7XG4gICAgICAgIG5ld1Rhc2suYXBwZW5kQ2hpbGQobmV3VGFza0xhYmVsKTtcbiAgICAgICAgdWxUYXNrcy5hcHBlbmRDaGlsZChuZXdUYXNrKTtcblxuICAgICAgICAvL0FERCBUTyBPQkpFQ1RcbiAgICAgICAgdGhpcy4jZGl2Q2FyZCA9IGRpdkNhcmQ7XG4gICAgfVxuICAgICNiaW5kRXZlbnRzKCkge1xuICAgICAgICAvL0NBUkQgTkFNRVxuICAgICAgICBjb25zdCBjYXJkTmFtZSA9IHRoaXMuI2RpdkNhcmQucXVlcnlTZWxlY3RvcihcIi5uYW1lXCIpO1xuICAgICAgICBjYXJkTmFtZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBldmVudC50YXJnZXQuc2VsZWN0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjYXJkTmFtZS5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHRoaXMuI2xpc3QubmFtZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgIFB1YnN1Yi5lbWl0KFwicmVsb2FkUGFnZVwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9SRU1PVkUgTElTVFxuICAgICAgICBjb25zdCByZW1vdmVMaXN0ID0gdGhpcy4jZGl2Q2FyZC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgXCIucGFyZW50SG92ZXJSZW1vdmVMaXN0XCJcbiAgICAgICAgKTtcbiAgICAgICAgcmVtb3ZlTGlzdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbW92ZUxpc3RcIiwgdGhpcy4jbGlzdCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vQ0hFQ0tCT1hFU1xuICAgICAgICBjb25zdCBjaGVja0JveGVzID0gdGhpcy4jZGl2Q2FyZC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXSdcbiAgICAgICAgKTtcbiAgICAgICAgY2hlY2tCb3hlcy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRhc2tpZFwiKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0YXNrID0gdGhpcy4jbGlzdC50YXNrc1tpZF07XG4gICAgICAgICAgICAgICAgdGFzay5pc0RvbmUgPSBldmVudC50YXJnZXQuY2hlY2tlZDtcbiAgICAgICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbG9hZFBhZ2VcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9UQVNLU1xuICAgICAgICBjb25zdCB0YXNrcyA9IHRoaXMuI2RpdkNhcmQucXVlcnlTZWxlY3RvckFsbChcIi50YXNrXCIpO1xuICAgICAgICB0YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICB0YXNrLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS10YXNraWRcIik7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFzayA9IHRoaXMuI2xpc3QudGFza3NbaWRdO1xuICAgICAgICAgICAgICAgIHRhc2submFtZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbG9hZFBhZ2VcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9BREQgTkVXIFRBU0sgSU5QVVRcbiAgICAgICAgY29uc3QgYWRkTmV3VGFzayA9IHRoaXMuI2RpdkNhcmQucXVlcnlTZWxlY3RvcihcIi5uZXdUYXNrXCIpO1xuICAgICAgICBhZGROZXdUYXNrLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXdJRCA9IE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICB0aGlzLiNsaXN0LnRhc2tzW25ld0lEXSA9IG5ldyBUYXNrKGV2ZW50LnRhcmdldC52YWx1ZSwgZmFsc2UpO1xuXG4gICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbG9hZFBhZ2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vRUFDSCByZW1vdmVUYXNrIEJVVFRPTlxuICAgICAgICBjb25zdCByZW1vdmVUYXNrID0gdGhpcy4jZGl2Q2FyZC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgXCIucGFyZW50SG92ZXJSZW1vdmVUYXNrXCJcbiAgICAgICAgKTtcbiAgICAgICAgcmVtb3ZlVGFzay5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy4jbGlzdC50YXNrc1tcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtdGFza2lkXCIpXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbG9hZFBhZ2VcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFwiLi9jc3Mvc3R5bGUuY3NzXCI7XG5pbXBvcnQgUHVic3ViIGZyb20gXCIuL1B1YnN1YlwiO1xuaW1wb3J0IFN0b3JhZ2UgZnJvbSBcIi4vU3RvcmFnZVwiO1xuaW1wb3J0IFVJX0xpc3QgZnJvbSBcIi4vVUlfTGlzdFwiO1xuaW1wb3J0IHsgcmVuZGVyRm9vdGVyIH0gZnJvbSBcIi4vZm9vdGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVJIHtcbiAgICBzdGF0aWMgbG9hZFBhZ2UoKSB7XG4gICAgICAgIHRoaXMuYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpO1xuICAgICAgICB0aGlzLmJvZHkuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgdGhpcy4jcmVuZGVyTmF2KCk7XG4gICAgICAgIHRoaXMuI3JlbmRlckxpc3RzKCk7XG4gICAgICAgIHRoaXMuYm9keS5hcHBlbmRDaGlsZChyZW5kZXJGb290ZXIoXCIyMDIzXCIpKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgI3JlbmRlckxlZnRQYW5lbCgpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGgxPkZpbHRlcnM8L2gxPlxuICAgICAgICAgICAgPGgyPlRhZ3M8L2gyPlxuICAgICAgICBgO1xuICAgICAgICBlbGVtZW50LmlkID0gXCJsZWZ0UGFuZWxcIjtcblxuICAgICAgICB0aGlzLmJvZHkuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgfVxuICAgIHN0YXRpYyAjcmVuZGVyTmF2KCkge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBgRGV3RGV3Lml0YDtcbiAgICAgICAgZWxlbWVudC5pZCA9IFwibmF2XCI7XG4gICAgICAgIHRoaXMuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICB9XG4gICAgc3RhdGljICNyZW5kZXJMaXN0cygpIHtcbiAgICAgICAgLy9CVVRUT05TXG4gICAgICAgIGNvbnN0IG1haW5CdXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgbWFpbkJ1dHRvbnMuaWQgPSBcIm1haW5CdXR0b25zXCI7XG4gICAgICAgIHRoaXMuYm9keS5hcHBlbmRDaGlsZChtYWluQnV0dG9ucyk7XG5cbiAgICAgICAgY29uc3QgYnRuTmV3TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGJ0bk5ld0xpc3QuaW5uZXJUZXh0ID0gXCJOZXcgTGlzdFwiO1xuICAgICAgICBtYWluQnV0dG9ucy5hcHBlbmRDaGlsZChidG5OZXdMaXN0KTtcbiAgICAgICAgYnRuTmV3TGlzdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBQdWJzdWIuZW1pdChcIm5ld0xpc3RcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vTUFJTiBDT05URU5UXG4gICAgICAgIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgbWFpbkNvbnRlbnQuaWQgPSBcIm1haW5Db250ZW50XCI7XG4gICAgICAgIHRoaXMuYm9keS5hcHBlbmRDaGlsZChtYWluQ29udGVudCk7XG5cbiAgICAgICAgY29uc3QgbGlzdHMgPSBTdG9yYWdlLmxpc3RzU3RvcmFnZTtcblxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBsaXN0cykge1xuICAgICAgICAgICAgbWFpbkNvbnRlbnQuYXBwZW5kQ2hpbGQobmV3IFVJX0xpc3QobGlzdHNba2V5XSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyAjcmVuZGVyUHJvamVjdHMoKSB7XG4gICAgICAgIC8vQlVUVE9OU1xuICAgICAgICBjb25zdCBtYWluQnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIG1haW5CdXR0b25zLmlkID0gXCJtYWluQnV0dG9uc1wiO1xuICAgICAgICB0aGlzLmJvZHkuYXBwZW5kQ2hpbGQobWFpbkJ1dHRvbnMpO1xuXG4gICAgICAgIGNvbnN0IGJ0bk5ld1Byb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBidG5OZXdQcm9qZWN0LmlubmVyVGV4dCA9IFwiTmV3IFByb2plY3RcIjtcbiAgICAgICAgbWFpbkJ1dHRvbnMuYXBwZW5kQ2hpbGQoYnRuTmV3UHJvamVjdCk7XG4gICAgICAgIGJ0bk5ld1Byb2plY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge30pO1xuXG4gICAgICAgIC8vTUFJTiBDT05URU5UXG4gICAgICAgIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgbWFpbkNvbnRlbnQuaWQgPSBcIm1haW5Db250ZW50XCI7XG4gICAgICAgIHRoaXMuYm9keS5hcHBlbmRDaGlsZChtYWluQ29udGVudCk7XG5cbiAgICAgICAgbWFpbkNvbnRlbnQuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmFtZVwiPlByb2plY3QgMTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdXNjaXBpdCwgZG9sb3JlbSBhdXRlbSByZW0gbWFpb3JlcyBzdW50IGZ1Z2l0ISBNYWduaVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zZWN0ZXR1ciB0ZW5ldHVyIHBsYWNlYXQgaXBzYW0gbmVzY2l1bnQgYmVhdGFlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2VydW50IG5pc2kgYXV0LlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPkFjdGl2ZSBMaXN0czwvaDI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+TGlzdCAxPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkxpc3QgMjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5MaXN0IDM8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+TGlzdCA0PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwZW5kaW5nXCI+MyBwZW5kaW5nIHRhc2tzIGluIDIgbGlzdHMuPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByb2dyZXNzIG1heD1cIjEwMFwiIHZhbHVlPVwiNzBcIj48L3Byb2dyZXNzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24+R28gdG8gcHJvamVjdDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XG4gICAgfVxuICAgIHN0YXRpYyAjcmVuZGVyTWFpbkJ1dHRvbnMoKSB7XG4gICAgICAgIC8vRE9NU1RVRkZcbiAgICAgICAgY29uc3QgbWFpbkJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBtYWluQnV0dG9ucy5pZCA9IFwibWFpbkJ1dHRvbnNcIjtcbiAgICAgICAgdGhpcy5ib2R5LmFwcGVuZENoaWxkKG1haW5CdXR0b25zKTtcblxuICAgICAgICAvL0JVVFRPTlNcbiAgICAgICAgY29uc3QgYnRuTmV3UHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGJ0bk5ld1Byb2plY3QuaW5uZXJUZXh0ID0gXCJOZXcgUHJvamVjdFwiO1xuICAgICAgICBtYWluQnV0dG9ucy5hcHBlbmRDaGlsZChidG5OZXdQcm9qZWN0KTtcbiAgICAgICAgYnRuTmV3UHJvamVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7fSk7XG4gICAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckZvb3Rlcih5ZWFyKSB7XG4gICAgbGV0IGN1cnJlbnRZZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xuICAgIGxldCBvdXRwdXQ7XG5cbiAgICBvdXRwdXQgPSB5ZWFyO1xuICAgIGlmICgheWVhci5pbmNsdWRlcyhjdXJyZW50WWVhcikpIHtcbiAgICAgICAgb3V0cHV0ID0gb3V0cHV0ICsgXCItXCIgKyBjdXJyZW50WWVhciArIFwiIC0gXCI7XG4gICAgfVxuICAgIGNvbnN0IGRpdkZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb290ZXJcIik7XG4gICAgZGl2Rm9vdGVyLmlubmVySFRNTCA9IGBcbiAgICA8c21hbGw+XG4gICAgICAgICZjb3B5OyBDb3B5cmlnaHQgJHtvdXRwdXR9XG4gICAgICAgIDxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vcG9ya2Vudm9sZlwiIHRhcmdldD1cIuKAnV9ibGFua+KAnVwiPlxuICAgICAgICAgICAgUG9ya2VudsO2bGZcbiAgICAgICAgPC9hPlxuICAgIDwvc21hbGw+XG4gICAgYDtcbiAgICBkaXZGb290ZXIuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgIGRpdkZvb3Rlci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9IFwiY2VudGVyXCI7XG4gICAgZGl2Rm9vdGVyLnN0eWxlLmFsaWduSXRlbXMgPSBcImNlbnRlclwiO1xuICAgIGRpdkZvb3Rlci5zdHlsZS5oZWlnaHQgPSBcIjNyZW1cIjtcblxuICAgIHJldHVybiBkaXZGb290ZXI7XG59XG4iLCJpbXBvcnQgUHVic3ViIGZyb20gXCIuL1B1YnN1YlwiO1xuaW1wb3J0IFN0b3JhZ2UgZnJvbSBcIi4vU3RvcmFnZVwiO1xuaW1wb3J0IFVJIGZyb20gXCIuL1VJXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV2ZW50c0ludGVyZmFjZSB7XG4gICAgc3RhdGljIGJpbmRFdmVudHMoKSB7XG4gICAgICAgIFB1YnN1Yi5vbihcInNhdmVcIiwgKCkgPT4ge1xuICAgICAgICAgICAgU3RvcmFnZS5zYXZlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBQdWJzdWIub24oXCJsb2FkXCIsICgpID0+IHtcbiAgICAgICAgICAgIFN0b3JhZ2UubG9hZCgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBQdWJzdWIub24oXCJyZWxvYWRQYWdlXCIsICgpID0+IHtcbiAgICAgICAgICAgIFB1YnN1Yi5lbWl0KFwic2F2ZVwiKTtcbiAgICAgICAgICAgIFVJLmxvYWRQYWdlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBQdWJzdWIub24oXCJuZXdMaXN0XCIsICgpID0+IHtcbiAgICAgICAgICAgIFN0b3JhZ2UubmV3TGlzdCgpO1xuICAgICAgICAgICAgUHVic3ViLmVtaXQoXCJyZWxvYWRQYWdlXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgUHVic3ViLm9uKFwicmVtb3ZlTGlzdFwiLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgZGVsZXRlIFN0b3JhZ2UubGlzdHNTdG9yYWdlW2RhdGEuaWRdO1xuXG4gICAgICAgICAgICBQdWJzdWIuZW1pdChcInJlbG9hZFBhZ2VcIik7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiIsImltcG9ydCBTdG9yYWdlIGZyb20gXCIuL1N0b3JhZ2UuanNcIjtcbmltcG9ydCBFdmVudHNJbnRlcmZhY2UgZnJvbSBcIi4vRXZlbnRzSW50ZXJmYWNlXCI7XG5pbXBvcnQgVUkgZnJvbSBcIi4vVUlcIjtcbmltcG9ydCBQdWJzdWIgZnJvbSBcIi4vUHVic3ViLmpzXCI7XG5cbkV2ZW50c0ludGVyZmFjZS5iaW5kRXZlbnRzKCk7XG5cblB1YnN1Yi5lbWl0KFwibG9hZFwiKTtcblVJLmxvYWRQYWdlKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJpIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIlB1YnN1YiIsIm9uIiwiZXZlbnROYW1lIiwiZm4iLCJvZmYiLCJlbWl0IiwiZm9yRWFjaCIsIlRhc2siLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJfaXNEb25lIiwiYXJnIiwiaXNEb25lIiwiZHVlRGF0ZSIsInBhcnNlIiwiTGlzdCIsIl9pZCIsIl9uYW1lIiwiX29ialRhc2tzIiwidGFza3MiLCJvdXRwdXRUYXNrcyIsIlN0b3JhZ2UiLCJzdGF0aWMiLCJuZXdJRCIsIk1hdGgiLCJyYW5kb20iLCJjbGVhciIsImxvY2FsU3RvcmFnZSIsInNhdmUiLCJzZXRJdGVtIiwibG9hZCIsImxpc3RzU3RvcmFnZSIsImxvY2FscyIsIlVJX0xpc3QiLCJjb2xvciIsImgiLCJzIiwibCIsImRpdkNhcmQiLCJjbGFzc0xpc3QiLCJhZGQiLCJib3JkZXJUb3AiLCJpbm5lckhUTUwiLCJpbnB1dFRpdGxlIiwidHlwZSIsInZhbHVlIiwicmVtb3ZlTGlzdCIsInRhc2tMaXN0IiwiYW1vdW50RG9uZSIsInVsVGFza3MiLCJsaSIsImNoZWNrYm94IiwiY2hlY2tlZCIsImxhYmVsIiwicmVtb3ZlVGFzayIsIm5ld1Rhc2siLCJuZXdUYXNrTGFiZWwiLCJwbGFjZWhvbGRlciIsImlubmVyVGV4dCIsInBsdXMiLCJjYXJkTmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInNlbGVjdCIsInByZXZlbnREZWZhdWx0IiwicXVlcnlTZWxlY3RvckFsbCIsImdldEF0dHJpYnV0ZSIsInRhc2siLCJVSSIsImxvYWRQYWdlIiwiYm9keSIsInllYXIiLCJvdXRwdXQiLCJjdXJyZW50WWVhciIsIkRhdGUiLCJnZXRGdWxsWWVhciIsImluY2x1ZGVzIiwiZGl2Rm9vdGVyIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsImhlaWdodCIsInJlbmRlckZvb3RlciIsIm1haW5CdXR0b25zIiwiYnRuTmV3TGlzdCIsIm1haW5Db250ZW50IiwibGlzdHMiLCJidG5OZXdQcm9qZWN0IiwiYmluZEV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=